#!/usr/bin/env nu

# Helix Save System Diagnostic
# Investigates exactly what happens when Helix "saves" files

def main [file_path: string] {
    print $"🔍 HELIX SAVE DIAGNOSTIC: ($file_path)"
    print "=================================================="
    
    # Get baseline file info
    let initial_stat = (stat $file_path)
    print $"📊 Initial file size: ($initial_stat.size) bytes"
    print $"📊 Initial modified time: ($initial_stat.modified)"
    
    # Check initial content
    print "📄 Initial file content (last 3 lines):"
    ^tail -3 $file_path | each { |line| print $"   ($line)" }
    
    print "\n⏰ Waiting 1 second..."
    sleep 1sec
    
    # Check if file changed
    let after_1sec_stat = (stat $file_path)
    print $"📊 After 1sec - size: ($after_1sec_stat.size), modified: ($after_1sec_stat.modified)"
    
    if $after_1sec_stat.modified != $initial_stat.modified {
        print "🔄 FILE CHANGED during first second!"
        print "📄 New content (last 3 lines):"
        ^tail -3 $file_path | each { |line| print $"   ($line)" }
    } else {
        print "💤 No change detected in first second"
    }
    
    print "\n⏰ Waiting another 2 seconds..."
    sleep 2sec
    
    # Check again
    let after_3sec_stat = (stat $file_path)
    print $"📊 After 3sec - size: ($after_3sec_stat.size), modified: ($after_3sec_stat.modified)"
    
    if $after_3sec_stat.modified != $after_1sec_stat.modified {
        print "🔄 FILE CHANGED during second wait!"
        print "📄 New content (last 3 lines):"
        ^tail -3 $file_path | each { |line| print $"   ($line)" }
    } else {
        print "💤 No change detected in second wait"
    }
    
    print "\n⏰ Waiting another 5 seconds..."
    sleep 5sec
    
    # Final check
    let final_stat = (stat $file_path)
    print $"📊 Final - size: ($final_stat.size), modified: ($final_stat.modified)"
    
    if $final_stat.modified != $after_3sec_stat.modified {
        print "🔄 FILE CHANGED during final wait!"
        print "📄 Final content (last 3 lines):"
        ^tail -3 $file_path | each { |line| print $"   ($line)" }
    } else {
        print "💤 No change detected in final wait"
    }
    
    print "\n🔍 FILESYSTEM BUFFER CHECK:"
    print "Running sync command to flush any OS-level buffers..."
    ^sync
    
    let post_sync_stat = (stat $file_path)
    if $post_sync_stat.modified != $final_stat.modified {
        print "🚨 FILE CHANGED AFTER SYNC! This indicates OS-level buffering."
        print "📄 Post-sync content (last 3 lines):"
        ^tail -3 $file_path | each { |line| print $"   ($line)" }
    } else {
        print "✅ No change after sync - file is consistent"
    }
    
    print "\n📋 DIAGNOSTIC SUMMARY:"
    print $"   Initial size: ($initial_stat.size) → Final size: ($post_sync_stat.size)"
    print $"   Time span: ($initial_stat.modified) → ($post_sync_stat.modified)"
    
    if $initial_stat.size != $post_sync_stat.size {
        print "🚨 SIZE CHANGED - Content was modified during observation"
    } else {
        print "✅ SIZE CONSISTENT - No content changes detected"
    }
}