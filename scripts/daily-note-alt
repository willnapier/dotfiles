#!/bin/bash
# Alternative daily-note with cursor marker approach

VAULT_DIR="$HOME/Forge"
DAILY_DIR="$VAULT_DIR/NapierianLogs/DayPages"

# Generate today's filename
TODAY=$(date '+%Y-%m-%d')
DAILY_FILE="$DAILY_DIR/$TODAY.md"

# Create the file if it doesn't exist
if [[ ! -f "$DAILY_FILE" ]]; then
    # Create directory if needed
    mkdir -p "$DAILY_DIR"
    
    # Use template and keep a cursor marker
    TEMPLATE_FILE="$HOME/Forge/Areas/PKMStrategies/Templates/DayPage.md"
    CURRENT_DATE="$TODAY"
    CURRENT_TIME=$(date "+%H:%M")
    
    # Cross-platform date parsing
    if [[ "$OSTYPE" == "darwin"* ]]; then
        HUMAN_DATE=$(date -j -f "%Y-%m-%d" "$TODAY" "+%A, %B %d, %Y")
    else
        HUMAN_DATE=$(date -d "$TODAY" "+%A, %B %d, %Y")
    fi
    
    # Process template but keep cursor marker temporarily
    sed \
        -e "s/{{date}}/$CURRENT_DATE/g" \
        -e "s/{{time24}}/$CURRENT_TIME/g" \
        -e "s/{{hdate}}/$HUMAN_DATE/g" \
        -e "s/<cursor>/CURSOR_HERE/g" \
        "$TEMPLATE_FILE" > "$DAILY_FILE"
    
    echo "📝 Created new daily note: $TODAY.md" >&2
fi

# Handle --print-path option
if [[ "$1" == "--print-path" ]]; then
    echo "$DAILY_FILE"
    exit 0
fi

# Check if file has cursor marker
if grep -q "CURSOR_HERE" "$DAILY_FILE" 2>/dev/null; then
    # Remove the marker and open with search
    sed -i '' 's/CURSOR_HERE//g' "$DAILY_FILE"
    # Open and immediately search for the line that had the marker
    # This approach uses Helix's search functionality
    CURSOR_LINE=$(grep -n "^$" "$DAILY_FILE" | head -1 | cut -d: -f1)
    exec hx "$DAILY_FILE:$CURSOR_LINE"
else
    # Fallback for files without marker
    exec hx "$DAILY_FILE:3"
fi