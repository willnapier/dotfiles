#!/usr/bin/env bash
# dotter-drift-watcher - Real-time monitoring for dotter configuration changes
# Automatically runs drift detection when dotter config or dotfiles change

set -euo pipefail

DOTFILES_DIR="/Users/williamnapier/dotfiles"
DOTTER_CONFIG="$DOTFILES_DIR/.dotter/global.toml"
LOG_FILE="$HOME/.local/share/dotter-drift-watcher.log"
LOCK_FILE="/tmp/dotter-drift-watcher.lock"

# Ensure log directory exists
mkdir -p "$(dirname "$LOG_FILE")"

# Logging function
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOG_FILE"
}

# Cleanup function
cleanup() {
    [[ -f "$LOCK_FILE" ]] && rm -f "$LOCK_FILE"
    log "Drift watcher stopped"
    exit
}

# Handle signals
trap cleanup SIGTERM SIGINT

# Check for existing instance
if [[ -f "$LOCK_FILE" ]]; then
    EXISTING_PID=$(cat "$LOCK_FILE" 2>/dev/null || echo "")
    if [[ -n "$EXISTING_PID" ]] && kill -0 "$EXISTING_PID" 2>/dev/null; then
        echo "‚ùå Drift watcher already running (PID: $EXISTING_PID)"
        exit 1
    else
        log "‚ö†Ô∏è  Removing stale lock file"
        rm -f "$LOCK_FILE"
    fi
fi

# Create lock file
echo $$ > "$LOCK_FILE"

log "üîç Starting dotter drift watcher"
log "üìÅ Monitoring: $DOTFILES_DIR"
log "‚öôÔ∏è  Config: $DOTTER_CONFIG"

# Function to handle file changes
handle_change() {
    local changed_file="$1"
    log "üìù Change detected: $changed_file"
    
    # Brief delay to avoid rapid-fire triggers
    sleep 2
    
    log "üîç Running drift audit..."
    
    # Run comprehensive audit and capture results
    if dotter-complete-audit > /tmp/drift-audit-output.log 2>&1; then
        log "‚úÖ Drift audit passed - configuration protected"
    else
        log "üö® DRIFT DETECTED - Configuration vulnerabilities found!"
        log "üìÑ Audit results:"
        
        # Show summary in log
        grep -E "(VULNERABLE|CRITICAL|AUDIT SUMMARY)" /tmp/drift-audit-output.log | head -10 >> "$LOG_FILE" || true
        
        # macOS notification
        if command -v osascript >/dev/null 2>&1; then
            osascript -e 'display notification "Configuration drift detected! Check drift watcher logs." with title "Dotter Drift Alert" sound name "Glass"' 2>/dev/null || true
        fi
        
        log "üîß Run 'dotter-complete-audit' to see full details"
        log "üìã Fix issues and redeploy with 'dotter deploy --force'"
    fi
    
    log "‚è±Ô∏è  Continuing to monitor..."
}

# Export function for fswatch callback
export -f handle_change log
export LOG_FILE DOTFILES_DIR

# Check if fswatch is available
if ! command -v fswatch >/dev/null 2>&1; then
    log "‚ùå fswatch not found - please install with: brew install fswatch"
    cleanup
fi

log "üëÄ Watching for changes (Ctrl+C to stop)..."

# Monitor dotfiles directory and dotter config for changes
/opt/homebrew/bin/fswatch -0 --recursive \
    --exclude='\\.git/' \
    --exclude='\\._' \
    --exclude='\\.DS_Store' \
    --exclude='/tmp/' \
    "$DOTFILES_DIR" | \
while IFS= read -r -d '' file; do
    # Only trigger on relevant files
    if [[ "$file" == *".toml" || "$file" == *".kdl" || "$file" == *".nu" || "$file" == *".lua" || "$file" == */scripts/* ]]; then
        handle_change "$file"
    fi
done