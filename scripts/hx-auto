#!/bin/bash
# Auto-detect system appearance and set Helix theme accordingly

# Resolve symlink to get actual file location
CONFIG_FILE="$(readlink -f "$HOME/.config/helix/config.toml" 2>/dev/null || realpath "$HOME/.config/helix/config.toml" 2>/dev/null || echo "$HOME/.config/helix/config.toml")"

# If still a symlink or doesn't exist, use the dotfiles location directly
if [ ! -f "$CONFIG_FILE" ] || [ -L "$CONFIG_FILE" ]; then
    CONFIG_FILE="$HOME/dotfiles/helix/config.toml"
fi

# Get system theme using cross-platform detection
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
THEME=$("$SCRIPT_DIR/get-system-theme.sh")

if [[ "$THEME" == "dark" ]]; then
    # Dark mode detected
    sd 'theme = "solarized_light_modal"' 'theme = "solarized_dark_modal"' "$CONFIG_FILE"
    sd 'theme = "solarized_light"' 'theme = "solarized_dark"' "$CONFIG_FILE"
    # Debug output
    >&2 echo "hx-auto: Set dark theme"
else
    # Light mode
    sd 'theme = "solarized_dark_modal"' 'theme = "solarized_light_modal"' "$CONFIG_FILE"
    sd 'theme = "solarized_dark"' 'theme = "solarized_light"' "$CONFIG_FILE"
    # Debug output
    >&2 echo "hx-auto: Set light theme"
fi

# Launch Helix with all arguments (cross-platform)
# Try to find Helix in PATH first, fallback to known locations
if command -v hx &> /dev/null; then
    exec hx "$@"
elif [[ -x "/opt/homebrew/bin/hx" ]]; then
    exec /opt/homebrew/bin/hx "$@"
elif [[ -x "/usr/bin/hx" ]]; then
    exec /usr/bin/hx "$@"
else
    echo "Error: Helix (hx) not found in PATH" >&2
    exit 1
fi