#!/bin/bash
# Cross-Platform Zellij Zombie Prevention Setup

detect_platform() {
    case "$(uname -s)" in
        Darwin*) echo "macos" ;;
        Linux*)  echo "linux" ;;
        CYGWIN*|MINGW*|MSYS*) echo "windows" ;;
        *) echo "unix" ;;
    esac
}

detect_init_system() {
    if command -v systemctl >/dev/null 2>&1; then
        echo "systemd"
    elif [ -d "/etc/init.d" ]; then
        echo "sysv"
    else
        echo "unknown"
    fi
}

PLATFORM=$(detect_platform)
INIT_SYSTEM=$(detect_init_system)
SCRIPT_DIR="$(dirname "$0")"

echo "üõ†Ô∏è  Setting up Cross-Platform Zellij Zombie Prevention System"
echo "============================================================"
echo "Platform: $PLATFORM"
echo "Init system: $INIT_SYSTEM"

# Create log directories
mkdir -p ~/.local/share 2>/dev/null || mkdir -p /tmp/zellij-logs

case "$PLATFORM" in
    macos)
        echo "üì± Setting up macOS Launch Agent..."
        
        # Create Launch Agent directory
        mkdir -p ~/Library/LaunchAgents
        
        # Create Launch Agent plist
        cat > ~/Library/LaunchAgents/com.williamnapier.zellij-zombie-watcher.plist << 'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Label</key>
    <string>com.williamnapier.zellij-zombie-watcher</string>
    
    <key>ProgramArguments</key>
    <array>
        <string>SCRIPT_DIR_PLACEHOLDER/zellij-zombie-watcher-cross-platform</string>
    </array>
    
    <key>RunAtLoad</key>
    <true/>
    
    <key>KeepAlive</key>
    <dict>
        <key>SuccessfulExit</key>
        <false/>
    </dict>
    
    <key>StandardOutPath</key>
    <string>HOME_PLACEHOLDER/.local/share/zellij-zombie-watcher.log</string>
    
    <key>StandardErrorPath</key>
    <string>HOME_PLACEHOLDER/.local/share/zellij-zombie-watcher-error.log</string>
    
    <key>ThrottleInterval</key>
    <integer>10</integer>
    
    <key>ProcessType</key>
    <string>Background</string>
</dict>
</plist>
EOF
        
        # Replace placeholders - using modern tools
        sd "SCRIPT_DIR_PLACEHOLDER" "$SCRIPT_DIR" ~/Library/LaunchAgents/com.williamnapier.zellij-zombie-watcher.plist
        sd "HOME_PLACEHOLDER" "$HOME" ~/Library/LaunchAgents/com.williamnapier.zellij-zombie-watcher.plist
        
        # Load the agent
        launchctl unload ~/Library/LaunchAgents/com.williamnapier.zellij-zombie-watcher.plist 2>/dev/null || true
        launchctl load ~/Library/LaunchAgents/com.williamnapier.zellij-zombie-watcher.plist
        
        # Add cron job
        setup_cron_job
        ;;
        
    linux)
        case "$INIT_SYSTEM" in
            systemd)
                echo "üêß Setting up systemd service..."
                
                # Create systemd user service
                mkdir -p ~/.config/systemd/user
                
                cat > ~/.config/systemd/user/zellij-zombie-watcher.service << EOF
[Unit]
Description=Zellij Zombie Watcher
After=multi-user.target

[Service]
Type=simple
ExecStart=$SCRIPT_DIR/zellij-zombie-watcher-cross-platform
Restart=always
RestartSec=10
StandardOutput=file:$HOME/.local/share/zellij-zombie-watcher.log
StandardError=file:$HOME/.local/share/zellij-zombie-watcher-error.log

[Install]
WantedBy=default.target
EOF
                
                # Enable and start the service
                systemctl --user daemon-reload
                systemctl --user enable zellij-zombie-watcher.service
                systemctl --user start zellij-zombie-watcher.service
                
                echo "‚úÖ Systemd service installed and started"
                ;;
            *)
                echo "‚ö†Ô∏è  Systemd not available, using cron only"
                ;;
        esac
        
        # Add cron job as backup
        setup_cron_job
        ;;
        
    *)
        echo "üîß Setting up generic Unix monitoring (cron only)..."
        setup_cron_job
        ;;
esac

# Function to setup cron job (cross-platform)
setup_cron_job() {
    echo "‚è∞ Setting up cron job..."
    
    # Determine path to nu
    NU_PATH=$(command -v nu || echo "/opt/homebrew/bin/nu")
    
    CRON_JOB="*/15 * * * * $NU_PATH $SCRIPT_DIR/zellij-zombie-killer --auto >/dev/null 2>&1"
    
    # Check if cron job already exists
    if ! crontab -l 2>/dev/null | rg -q "zellij-zombie-killer"; then
        # Add to existing crontab
        (crontab -l 2>/dev/null; echo "$CRON_JOB") | crontab -
        echo "‚úÖ Cron job added: cleanup every 15 minutes"
    else
        echo "‚ÑπÔ∏è  Cron job already exists"
    fi
}

# Run the cron setup function
setup_cron_job

echo ""
echo "üß™ Testing the system..."
if command -v pgrep >/dev/null 2>&1; then
    pgrep -f zellij | wc -l | xargs echo "Current Zellij processes:"
else
    ps aux | rg '\bzellij\b' | wc -l | xargs echo "Current Zellij processes:"
fi

echo ""
echo "üìä System Status:"

case "$PLATFORM" in
    macos)
        echo "- Launch Agent: $(launchctl list | rg zellij-zombie-watcher >/dev/null && echo "‚úÖ Running" || echo "‚ùå Not running")"
        ;;
    linux)
        if [ "$INIT_SYSTEM" = "systemd" ]; then
            echo "- Systemd Service: $(systemctl --user is-active zellij-zombie-watcher.service 2>/dev/null || echo "‚ùå Not running")"
        fi
        ;;
esac

echo "- Cron Job: $(crontab -l 2>/dev/null | rg -q zellij-zombie-killer && echo "‚úÖ Installed" || echo "‚ùå Not installed")"
echo "- Watcher Script: $([ -x "$SCRIPT_DIR/zellij-zombie-watcher-cross-platform" ] && echo "‚úÖ Executable" || echo "‚ùå Not executable")"
echo "- Killer Script: $([ -f "$SCRIPT_DIR/zellij-zombie-killer" ] && echo "‚úÖ Present" || echo "‚ùå Missing")"

echo ""
echo "üéØ Cross-Platform Prevention System Active!"
echo "Platform-specific monitoring + periodic cleanup every 15 minutes"
echo "Logs: ~/.local/share/zellij-zombie-*.log"
echo ""

case "$PLATFORM" in
    macos)
        echo "macOS commands:"
        echo "- Check status: launchctl list | rg zellij"
        echo "- Stop: launchctl unload ~/Library/LaunchAgents/com.williamnapier.zellij-zombie-watcher.plist"
        echo "- Start: launchctl load ~/Library/LaunchAgents/com.williamnapier.zellij-zombie-watcher.plist"
        ;;
    linux)
        if [ "$INIT_SYSTEM" = "systemd" ]; then
            echo "Linux systemd commands:"
            echo "- Check status: systemctl --user status zellij-zombie-watcher"
            echo "- Stop: systemctl --user stop zellij-zombie-watcher"
            echo "- Start: systemctl --user start zellij-zombie-watcher"
        fi
        ;;
esac

echo ""
echo "Universal commands:"
echo "- View logs: tail -f ~/.local/share/zellij-zombie-watcher.log"
echo "- Manual cleanup: nu $SCRIPT_DIR/zellij-zombie-killer --auto"