#!/bin/bash
# Open today's daily note directly in Helix or print path

VAULT_DIR="$HOME/Forge"
DAILY_DIR="$VAULT_DIR/NapierianLogs/DayPages"  # Adjust path as needed

# Generate today's filename (adjust format as needed)
TODAY=$(date '+%Y-%m-%d')
DAILY_FILE="$DAILY_DIR/$TODAY.md"

# Calculate cursor position from template (always available)
TEMPLATE_FILE="$HOME/Forge/Areas/Obsidian/Templates/DayPage.md"
CURSOR_LINE=$(grep -n "<cursor>" "$TEMPLATE_FILE" | cut -d: -f1)

# Create the file if it doesn't exist
if [[ ! -f "$DAILY_FILE" ]]; then
    # Create directory if needed
    mkdir -p "$DAILY_DIR"
    
    # Use the DayPage template directly
    CURRENT_DATE="$TODAY"
    CURRENT_TIME=$(date "+%H:%M")
    
    # Cross-platform date parsing - full format with day name
    if [[ "$OSTYPE" == "darwin"* ]]; then
        # macOS
        HUMAN_DATE=$(date -j -f "%Y-%m-%d" "$TODAY" "+%A")
    else
        # Linux
        HUMAN_DATE=$(date -d "$TODAY" "+%A")
    fi
    
    # Process the template
    cat "$TEMPLATE_FILE" | \
        sd --string-mode '{{date}}' "$CURRENT_DATE" | \
        sd --string-mode '{{time24}}' "$CURRENT_TIME" | \
        sd --string-mode '{{hdate}}' "$HUMAN_DATE" | \
        sd --string-mode '<cursor>' '' > "$DAILY_FILE"
    
    echo "📝 Created new daily note: $TODAY.md" >&2
fi

# Handle --print-path option
if [[ "$1" == "--print-path" ]]; then
    echo "$DAILY_FILE"
    exit 0
fi

# Debug: Show what we're about to execute
echo "DEBUG: CURSOR_LINE = '$CURSOR_LINE'" >&2
echo "DEBUG: DAILY_FILE = '$DAILY_FILE'" >&2
echo "DEBUG: File exists: $(test -f "$DAILY_FILE" && echo YES || echo NO)" >&2
echo "DEBUG: Line count: $(wc -l < "$DAILY_FILE")" >&2

# Open in Helix at the cursor position from template
# Check if we're in a Zellij session (line positioning may not work properly)
if [[ -n "$ZELLIJ" ]]; then
    echo "DEBUG: Inside Zellij - trying different positioning approaches" >&2
    # Try various approaches that might work better in Zellij
    if [[ -n "$CURSOR_LINE" ]]; then
        echo "DEBUG: Zellij mode - trying: helix \"$DAILY_FILE:$CURSOR_LINE:1\"" >&2
        exec helix "$DAILY_FILE:$CURSOR_LINE:1"
    else
        echo "DEBUG: Zellij mode - fallback: helix \"$DAILY_FILE:3:1\"" >&2
        exec helix "$DAILY_FILE:3:1"
    fi
else
    # Regular terminal - use standard line positioning
    if [[ -n "$CURSOR_LINE" ]]; then
        echo "DEBUG: Regular terminal - Executing: helix \"$DAILY_FILE:$CURSOR_LINE:0\"" >&2
        exec helix "$DAILY_FILE:$CURSOR_LINE:0"
    else
        # Fallback to line 3 if no cursor found in template
        echo "DEBUG: Regular terminal - Executing fallback: helix \"$DAILY_FILE:3:0\"" >&2
        exec helix "$DAILY_FILE:3:0"
    fi
fi
