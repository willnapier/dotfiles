#!/usr/bin/env nu

# Helix-Aware Sleep Duration Watcher
# Only runs sleep duration processing while Helix is active
# Uses watchexec to monitor file changes and process sleep entries automatically
# Created: 2025-09-07

def is-helix-active [] {
    # Check if Helix (hx) process is running
    let helix_processes = (ps | where name =~ "hx|helix" | length)
    $helix_processes > 0
}

def main [] {
    print "üõå Starting Helix-aware sleep duration watcher..."
    print "üìù Will only process files while Helix is running"
    print "‚ö° Watching for markdown file changes..."
    print "üõë Press Ctrl+C to stop\n"
    
    # Check if watchexec is available
    if (which watchexec | is-empty) {
        print "‚ùå Error: watchexec is not installed"
        print "Install with: brew install watchexec-cli"
        return
    }
    
    # Main monitoring loop
    loop {
        if (is-helix-active) {
            print $"‚úÖ Helix is running - starting file watcher at (date now | format date '%H:%M:%S')"
            
            # Run watchexec while Helix is active
            # Monitor markdown files in Obsidian vault
            # Process sleep entries when files change
            let vault_path = $"($env.HOME)/Obsidian.nosync/Forge"
            let result = (^watchexec --watch $vault_path --exts md --restart --debounce 2000 -- sleep-duration-processor | complete)
            
            print $"‚è∏Ô∏è  File watcher stopped at (date now | format date '%H:%M:%S')"
        } else {
            # Helix not running, wait before checking again
            sleep 10sec
        }
        
        # Short pause before checking Helix status again
        sleep 5sec
    }
}
