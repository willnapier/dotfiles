[helpers]

# Cross-platform shared configuration
[shared]
depends = []

[shared.files]
"git/gitconfig" = "~/.gitconfig"
"helix/config.toml" = "~/.config/helix/config.toml"
"helix/languages.toml" = "~/.config/helix/languages.toml"
"inlyne/inlyne.toml" = "~/.config/inlyne/inlyne.toml"
"gtk-3.0/gtk.css" = "~/.config/gtk-3.0/gtk.css"
"gtk-4.0/gtk.css" = "~/.config/gtk-4.0/gtk.css"
"nushell/config.nu" = "~/.config/nushell/config.nu"
"nushell/env.nu" = "~/.config/nushell/env.nu"
"yazi/yazi.toml" = "~/.config/yazi/yazi.toml"
"yazi/keymap.toml" = "~/.config/yazi/keymap.toml"
"yazi/theme.toml" = "~/.config/yazi/theme.toml"
"zellij/config.kdl" = "~/.config/zellij/config.kdl"
"starship.toml" = "~/.config/starship.toml"
# FIXED: Directory-level symlinks converted to individual files for reliability
# Yazi flavors - individual directory symlinks (flavors are complex nested structures)
"yazi/flavors/solarized-dark.yazi" = { target = "~/.config/yazi/flavors/solarized-dark.yazi", type = "symbolic" }
"yazi/flavors/solarized-light.yazi" = { target = "~/.config/yazi/flavors/solarized-light.yazi", type = "symbolic" }
"yazi/flavors/dracula.yazi" = { target = "~/.config/yazi/flavors/dracula.yazi", type = "symbolic" }
# Yazi plugins and scripts - individual directory symlinks
"yazi/plugins" = { target = "~/.config/yazi/plugins", type = "symbolic" }
"yazi/scripts" = { target = "~/.config/yazi/scripts", type = "symbolic" }
# Zellij layouts - individual files for reliability  
"zellij/layouts/laptop.kdl" = "~/.config/zellij/layouts/laptop.kdl"
"zellij/layouts/desktop.kdl" = "~/.config/zellij/layouts/desktop.kdl"
"zellij/layouts/desktop-27.kdl" = "~/.config/zellij/layouts/desktop-27.kdl"
"zellij/layouts/desktop-27-simple.kdl" = "~/.config/zellij/layouts/desktop-27-simple.kdl"
"zellij/layouts/desktop-quarters.kdl" = "~/.config/zellij/layouts/desktop-quarters.kdl"
"zellij/layouts/desktop-niri.kdl" = "~/.config/zellij/layouts/desktop-niri.kdl"
"zellij/layouts/minimal-test.kdl" = "~/.config/zellij/layouts/minimal-test.kdl"
"zellij/layouts/test-basic.kdl" = "~/.config/zellij/layouts/test-basic.kdl"
# Helix themes - individual files for reliability (no more drift!)
"helix/themes/solarized_dark_modal.toml" = "~/.config/helix/themes/solarized_dark_modal.toml"
"helix/themes/solarized_light_modal.toml" = "~/.config/helix/themes/solarized_light_modal.toml" 
"helix/themes/solarized_dark_modal_wiki.toml" = "~/.config/helix/themes/solarized_dark_modal_wiki.toml"
"helix/themes/test_theme.toml" = "~/.config/helix/themes/test_theme.toml"
# Neovim configuration files - DISABLED (user doesn't use nvim)
# "nvim/init.lua" = "~/.config/nvim/init.lua"
# "nvim/lazy-lock.json" = "~/.config/nvim/lazy-lock.json"
# "nvim/lua" = { target = "~/.config/nvim/lua", type = "symbolic" }
# "nvim/doc" = { target = "~/.config/nvim/doc", type = "symbolic" }
# "nvim/spell" = { target = "~/.config/nvim/spell", type = "symbolic" }
# HIGH PRIORITY: Essential configurations (added 2025-09-16)
"aerospace/aerospace.toml" = "~/.config/aerospace/aerospace.toml"
"ghostty/themes/solarized-dark" = "~/.config/ghostty/themes/solarized-dark"
"ghostty/themes/solarized-light" = "~/.config/ghostty/themes/solarized-light"
"karabiner/karabiner.json" = "~/.config/karabiner/karabiner.json"
# Zed editor configuration (added 2025-10-01)
"zed/keymap.json" = "~/.config/zed/keymap.json"
"zed/settings.json" = "~/.config/zed/settings.json"

# Essential scripts (most commonly used)
"scripts/daily-note.nu" = "~/.local/bin/daily-note"
"scripts/daypage-template" = "~/.local/bin/daypage-template"
"scripts/prev-day" = "~/.local/bin/prev-day"
"scripts/next-day" = "~/.local/bin/next-day"
"scripts/hx-insert-date" = "~/.local/bin/hx-insert-date"
"scripts/hx-insert-datetime" = "~/.local/bin/hx-insert-datetime"
"scripts/hx-insert-time" = "~/.local/bin/hx-insert-time"
"scripts/hx-mark-revisit" = "~/.local/bin/hx-mark-revisit"
"scripts/hx-toggle-todo" = "~/.local/bin/hx-toggle-todo"
"scripts/new-script" = "~/.local/bin/new-script"
"scripts/forge-content-search-interactive.sh" = "~/.local/bin/forge-content-search-interactive"
"scripts/forge-semantic-search.sh" = "~/.local/bin/forge-semantic-search"
"scripts/link-service" = "~/.local/bin/link-service"
"nushell/scripts/quantified-tracking.nu" = "~/.config/nushell/scripts/quantified-tracking.nu"
"nushell/scripts/quantified-tracking-v2.nu" = "~/.config/nushell/scripts/quantified-tracking-v2.nu"
"nushell/scripts/project-root-detection.nu" = "~/.config/nushell/scripts/project-root-detection.nu"
"nushell/scripts/serpl.nu" = "~/.config/nushell/scripts/serpl.nu"
"nushell/scripts/hx-smart-gf.nu" = "~/.config/nushell/scripts/hx-smart-gf.nu"
"nushell/completions/serpl-completions.nu" = "~/.config/nushell/completions/serpl-completions.nu"
"nushell/zotero-commands.nu" = "~/.config/nushell/zotero-commands.nu"

# Cross-platform utilities
"scripts/detect-platform" = "~/.local/bin/detect-platform"
"scripts/cross-platform-paths" = "~/.local/bin/cross-platform-paths"
"scripts/cross-platform-clipboard" = "~/.local/bin/cross-platform-clipboard"
"scripts/cross-platform-open" = "~/.local/bin/cross-platform-open"
"scripts/forge-linker-cross-platform.sh" = "~/.local/bin/forge-linker-cross-platform"
"scripts/citation-picker-cross-platform.sh" = "~/.local/bin/citation-picker-cross-platform.sh"
# Zellij zombie prevention system (cross-platform)
"scripts/zellij-zombie-killer" = "~/.local/bin/zellij-zombie-killer" 
"scripts/hx-auto" = "~/.local/bin/hx-auto"
"scripts/hx" = "~/.local/bin/hx"  # Universal hx command wrapping hx-auto
"scripts/get-system-theme.sh" = "~/.local/bin/get-system-theme.sh"
"scripts/hx-wiki" = "~/.local/bin/hx-wiki"
"scripts/hx-wiki.nu" = "~/.local/bin/hx-wiki.nu"
"scripts/forge-linker.sh" = "~/.local/bin/forge-linker"
"scripts/forge-linker.nu" = "~/.local/bin/forge-linker.nu"
"scripts/semantic-indexer" = "~/.local/bin/semantic-indexer"
"scripts/semantic-query" = "~/.local/bin/semantic-query"
"scripts/serpl-anywhere" = "~/.local/bin/serpl-anywhere"
"scripts/zj.nu" = "~/.local/bin/zj"
"scripts/dotter-audit" = "~/.local/bin/dotter-audit"
"scripts/dotter-add" = "~/.local/bin/dotter-add"
"scripts/dotter-auto-onboard" = "~/.local/bin/dotter-auto-onboard"
"scripts/dotter-protect-all" = "~/.local/bin/dotter-protect-all"
"scripts/dotter-verify-protection" = "~/.local/bin/dotter-verify-protection"
"scripts/dotter-protect-all-cross-platform" = "~/.local/bin/dotter-protect-all-cross-platform"
"scripts/dotter-verify-protection-cross-platform" = "~/.local/bin/dotter-verify-protection-cross-platform"
"scripts/citation-picker.sh" = "~/.local/bin/citation-picker.sh"
"scripts/dotter-complete-audit" = "~/.local/bin/dotter-complete-audit"
"scripts/dotter-orphan-detector-v2" = "~/.local/bin/dotter-orphan-detector-v2"
"scripts/dotter-enforce-compliance" = "~/.local/bin/dotter-enforce-compliance"
"scripts/dotter-drift-monitor" = "~/.local/bin/dotter-drift-monitor"
"scripts/claude-docs-backup" = "~/.local/bin/claude-docs-backup"
"scripts/rotate-linkmanager-logs" = "~/.local/bin/rotate-linkmanager-logs"
"scripts/dotter-drift-cron" = "~/.local/bin/dotter-drift-cron"
"scripts/drift-status" = "~/.local/bin/drift-status"
"scripts/script-ready-deploy" = "~/.local/bin/script-ready-deploy"
"scripts/zellij-cleanup.nu" = "~/.local/bin/zellij-cleanup.nu"
"scripts/process-count.nu" = "~/.local/bin/process-count.nu"
"scripts/yazi-project-file-search-floating" = "~/.local/bin/yazi-project-file-search-floating"
"scripts/yazi-project-file-search-floating.nu" = "~/.local/bin/yazi-project-file-search-floating.nu"
"scripts/yazi-recent-files.nu" = "~/.local/bin/yazi-recent-files.nu"
"scripts/simple-file-preview" = "~/.local/bin/simple-file-preview"
"scripts/git-auto-pull-watcher" = "~/.local/bin/git-auto-pull-watcher"
"scripts/word-wrap-preview.nu" = "~/.local/bin/word-wrap-preview.nu"
"scripts/activity-duration-processor" = "~/.local/bin/activity-duration-processor"
"scripts/activity-duration-processor-buffer" = "~/.local/bin/activity-duration-processor-buffer"
"scripts/hx-process-durations-wezterm" = "~/.local/bin/hx-process-durations-wezterm"
# Re-nu conversion scripts - Native Nushell watchers with no external dependencies
"scripts/claude-docs-watcher-renu" = "~/.local/bin/claude-docs-watcher-renu"
"scripts/dotter-realtime-watcher-renu" = "~/.local/bin/dotter-realtime-watcher-renu"
"scripts/helix-activity-watcher-renu" = "~/.local/bin/helix-activity-watcher-renu"
"scripts/zellij-zombie-watcher-renu" = "~/.local/bin/zellij-zombie-watcher-renu"
"scripts/dotter-drift-watcher-renu" = "~/.local/bin/dotter-drift-watcher-renu"
"scripts/citation-watcher-renu" = "~/.local/bin/citation-watcher-renu"
"scripts/activity-watcher-renu" = "~/.local/bin/activity-watcher-renu"
"scripts/yazi-search-with-preview" = "~/.local/bin/yazi-search-with-preview"
# Zotero automation - Native Nushell versions (no fswatch dependency)
"scripts/zotero-pdf-watcher-renu" = "~/.local/bin/zotero-pdf-watcher-renu"
"scripts/zotero-bridge-renu" = "~/.local/bin/zotero-bridge-renu"
# Syncthing connection monitoring system
"scripts/syncthing-connection-monitor" = "~/.local/bin/syncthing-connection-monitor"
# System-wide theme management
"scripts/theme-dark" = "~/.local/bin/theme-dark"
"scripts/theme-light" = "~/.local/bin/theme-light"
# Additional actively-used scripts
"scripts/activity-processor-periodic" = "~/.local/bin/activity-processor-periodic"
"scripts/citation-picker.nu" = "~/.local/bin/citation-picker.nu"
"scripts/git-push-reliability-monitor" = "~/.local/bin/git-push-reliability-monitor"
"scripts/hx-wiki-open-right" = "~/.local/bin/hx-wiki-open-right"
"scripts/hx-wiki-open-smart" = "~/.local/bin/hx-wiki-open-smart"
"scripts/simple-file-search.nu" = "~/.local/bin/simple-file-search.nu"
"scripts/skim-with-preview" = "~/.local/bin/skim-with-preview"
"scripts/yazi-project-content-search.nu" = "~/.local/bin/yazi-project-content-search.nu"
"scripts/zellij-skim-search.nu" = "~/.local/bin/zellij-skim-search.nu"
"scripts/daily-note" = "~/.local/bin/daily-note"
"scripts/zj" = "~/.local/bin/zj"
"scripts/theme-status" = "~/.local/bin/theme-status"
"scripts/fview" = "~/.local/bin/fview"
# Unified entry collection system - projects (P.) and activities (p::, t::, etc.) (added 2025-10-08)
"scripts/collect-entries" = "~/.local/bin/collect-entries"
"scripts/collect-projects" = "~/.local/bin/collect-projects"  # Legacy, will be removed
"scripts/collect-projects-auto" = "~/.local/bin/collect-projects-auto"
"scripts/collect-projects-cron" = "~/.local/bin/collect-projects-cron"
"scripts/collect-projects-watcher" = "~/.local/bin/collect-projects-watcher"
"scripts/para-projects" = "~/.local/bin/para-projects"
"scripts/para-areas" = "~/.local/bin/para-areas"
"scripts/para-connect" = "~/.local/bin/para-connect"
"scripts/para-archive" = "~/.local/bin/para-archive"
# Linked media audit and migration tools (added 2025-10-24)
"scripts/audit-linked-media" = "~/.local/bin/audit-linked-media"

# MEDIUM PRIORITY: Additional essential scripts (added 2025-09-16)
"scripts/get-openai-key" = "~/.local/bin/get-openai-key"
"scripts/semantic-auto-update" = "~/.local/bin/semantic-auto-update"

# Semantic search system - managed separately (has virtual environment)

[shared.variables]

# macOS-specific configuration
[macos]
depends = ["shared"]

[macos.files]
"shell/zshrc" = "~/.zshrc"
"wezterm/wezterm.lua" = "~/.config/wezterm/wezterm.lua"
"ghostty/config" = "~/.config/ghostty/config"
"macos/launchd/com.williamnapier.forge-link-manager.plist" = "~/Library/LaunchAgents/com.williamnapier.forge-link-manager.plist"
"macos/launchd/com.williamnapier.syncthing-monitor.plist" = "~/Library/LaunchAgents/com.williamnapier.syncthing-monitor.plist"
"macos/LaunchAgents/com.williamnapier.git-auto-pull-watcher.plist" = "~/Library/LaunchAgents/com.williamnapier.git-auto-pull-watcher.plist"
"launchagents/com.user.collect-projects.plist" = "~/Library/LaunchAgents/com.user.collect-projects.plist"
"launchagents/com.user.collect-projects-watcher.plist" = "~/Library/LaunchAgents/com.user.collect-projects-watcher.plist"
# NOTE: Individual files managed in [shared.files] for better reliability
# Removed directory symlinks that were causing orphan detection issues

[macos.variables]
opener_cmd = "open"
clipboard_copy = "pbcopy"
clipboard_paste = "pbpaste"
terminal_emulator = "wezterm"
platform = "macos"
nushell_path = "/opt/homebrew/bin/nu"

# Linux-specific configuration  
[linux]
depends = ["shared"]

[linux.files]
"shell/bashrc" = "~/.bashrc"
# Wayland/Linux terminal configs
"wayland/foot/foot.ini" = "~/.config/foot/foot.ini"
# Systemd user services - Re-nu Nushell-based watchers
"systemd/dotter-realtime-watcher.service" = "~/.config/systemd/user/dotter-realtime-watcher.service"
"systemd/dotter-sync-watcher.service" = "~/.config/systemd/user/dotter-sync-watcher.service"
"systemd/git-auto-pull-watcher.service" = "~/.config/systemd/user/git-auto-pull-watcher.service"
"systemd/syncthing-monitor.service" = "~/.config/systemd/user/syncthing-monitor.service"
"scripts/dotter-sync-watcher" = "~/.local/bin/dotter-sync-watcher"
"scripts/dotter-sync-watcher-wrapper" = "~/.local/bin/dotter-sync-watcher-wrapper"
"scripts/git-auto-push-watcher" = "~/.local/bin/git-auto-push-watcher"
"scripts/git-auto-push-watcher-wrapper" = "~/.local/bin/git-auto-push-watcher-wrapper"
"scripts/git-auto-pull-watcher-macos" = "~/.local/bin/git-auto-pull-watcher-macos"
"scripts/sync-service-monitor" = "~/.local/bin/sync-service-monitor"
# "scripts/setup-forge-link-service" = "~/.local/bin/setup-forge-link-service"  # Missing file - temporarily disabled
"systemd/git-auto-push-watcher.service" = "~/.config/systemd/user/git-auto-push-watcher.service"
"systemd/zotero-pdf-watcher.service" = "~/.config/systemd/user/zotero-pdf-watcher.service"
"systemd/zotero-bridge.service" = "~/.config/systemd/user/zotero-bridge.service"
"systemd/forge-link-manager.service" = "~/.config/systemd/user/forge-link-manager.service"
"systemd/collect-projects.service" = "~/.config/systemd/user/collect-projects.service"
"systemd/collect-projects.timer" = "~/.config/systemd/user/collect-projects.timer"
"systemd/collect-projects-watcher.service" = "~/.config/systemd/user/collect-projects-watcher.service"
# Wayland compositor configuration - Niri + Waybar + WezTerm
"niri/config.kdl" = "~/.config/niri/config.kdl"
"waybar/config" = "~/.config/waybar/config"
"waybar/style.css" = "~/.config/waybar/style.css"

[linux.variables]
opener_cmd = "xdg-open"
clipboard_copy = "wl-copy"
clipboard_paste = "wl-paste" 
terminal_emulator = "foot"
platform = "linux"
nushell_path = "/usr/bin/nu"

# Legacy default package for compatibility
[default]
depends = ["macos"]

[default.files]

[default.variables]

[settings]
default_target_type = "automatic"
