# ⚠️  CLAUDE CODE: THIS FILE IS DOTTER-MANAGED - EDIT HERE IN DOTFILES, NOT ~/.config/helix/
# ⚠️  NEVER EDIT ~/.config/helix/config.toml - IT'S A SYMLINK TO THIS FILE
# Helix Configuration for Colemak-DH

# Use standard Solarized themes - change based on system appearance
# For dark mode: theme = "solarized_dark" 
# For light mode: theme = "solarized_dark"
# Modal versions with mode indicators: "solarized_dark_modal" or "solarized_light_modal"
theme = "solarized_dark_modal"

[editor]
# Enable cursor shape changing
cursorline = true
# Auto-save files when switching buffers or after inactivity
auto-save = true
# Auto-save every 1000ms for activity duration processing (prevents race conditions)
idle-timeout = 1000

# Status line configuration
[editor.statusline]
left = ["mode", "spinner", "file-name", "file-modification-indicator"]
center = []
right = ["diagnostics", "selections", "position", "position-percentage", "file-encoding", "file-type"]

# Soft wrap configuration
[editor.soft-wrap]
enable = true
max-wrap = 25  # increase value to reduce forced mid-word wrapping
max-indent-retain = 0
wrap-indicator = ""  # set to "" to hide wrap indicator

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[keys.normal]
# Navigation (neio for hjkl)
n = "move_char_left"
e = "move_line_down"
i = "move_line_up"
o = "move_char_right"

# Fix for ZMK keyboard key interpretation in WezTerm
# These explicit bindings ensure correct behavior regardless of terminal interpretation
# ZMK sends US layout keycodes, macOS expects British layout, causing symbol misinterpretation
# This is a stable solution - no need to modify ZMK firmware (2025-09-09)
"$" = "goto_line_end"              # End of line
"0" = "goto_line_start"            # Beginning of line  
"^" = "goto_first_nonwhitespace"   # First non-whitespace
"%" = "match_brackets"              # Match bracket
"_" = "goto_first_nonwhitespace"   # Also first non-whitespace (alternate)
"|" = "goto_column"                 # Go to column
"*" = "search_selection"            # Search for selection
"#" = "search_prev"                 # Search backwards
"&" = "shell_keep_pipe"             # Ensure & works correctly for its intended purpose

# Displaced commands
h = "open_below"           # was on 'o'
j = "search_next"          # was on 'n'
k = "move_next_word_end"   # was on 'e'
l = "find_till_char"       # was on 't' (tilL)
t = "insert_mode"          # was on 'i' (inserT)

# Shifted versions for consistency
N = "extend_char_left"     # extend version of 'n'
E = "extend_line_down"     # extend version of 'e'
I = "extend_line_up"       # extend version of 'i'
O = "extend_char_right"    # extend version of 'o'
H = "open_above"           # pair with 'h' (open_below)
J = "search_prev"          # pair with 'j' (search_next)
K = "extend_next_word_end" # extend version of 'k'
L = "till_prev_char"       # pair with 'l' (till forward)
T = "insert_at_line_start"  # was on 'I' (Insert at line start)

[keys.normal.space]
# Toggle todo checkbox - Space+t
t = ["extend_to_line_bounds", ":pipe-to sd '\\[ \\]' '[TEMP]' | sd '\\[x\\]' '[ ]' | sd '\\[TEMP\\]' '[x]'"]

# Manual theme refresh - Space+T (capital T)  
T = ":config-reload"
# Process activity durations - Two step process to avoid timing issues
# Step 1: Save file manually with :w first  
# Step 2: Process with Space+p
p = [":sh hx-process-durations %{buffer_name}", ":reload"]
# Delete current file - Space+x (eXpunge, no confirmation)
x = [":sh trash %{buffer_name}", ":quit!"]
# Export selection to external register - Space+E (then type register letter)
E = ":pipe-to hx-register-export"
# Wiki link navigation - Space+w
w = ["extend_to_line_bounds", ":pipe-to ~/.local/bin/hx-wiki", ":buffer-close /tmp/helix-current-link.md", ":open /tmp/helix-current-link.md"]
# Smart file opener - Space+o (handles all file types and wiki links)
o = ["extend_to_line_bounds", ":pipe-to hx-open-system-rust"]  # Open in system app (Preview, Excel, etc.)
# Fuzzy link insertion - Space+l (Zellij floating pane)
# Note: Use Alt+l in Zellij for floating pane link picker
# Then paste result with standard paste command
l = ":insert-output pbpaste"
# Show real file name - Space+i (Info about current file)
i = ":sh hx-show-real-file %{buffer_name}"
# Date and time insertion commands
d = ":insert-output hx-insert-date"        # Insert current date (YYYY-MM-DD)
# Time insertion moved to avoid conflicts with Space+t (todo toggle) and Space+T (config reload)
";" = ":insert-output hx-insert-time"      # Insert current time (HH:MM) 
":" = ":insert-output hx-insert-datetime"  # Insert date and time (YYYY-MM-DD HH:MM)
# Mark file as revisited - using 'v' for 'visited'
v = ":sh hx-mark-revisit %{buffer_name}"   # Add today to revisited dates


# Save and return to previous buffer - Space+q (Quit current, return to previous)  
q = [":write", ":buffer-previous"]  # Write then go back to previous buffer

# Custom g-prefix commands
[keys.normal.g]
f = ["extend_to_line_bounds", ":pipe-to hx-smart-gf-rust", ":open /tmp/helix-gf-target.md"]  # Smart file opener (Rust/Nushell version with fd, rg)
x = ["extend_to_line_bounds", ":pipe-to hx-open-url"]  # Open URLs
w = ["extend_to_line_bounds", ":pipe-to hx-wiki", ":open /tmp/helix-current-link.md"]  # Wiki link navigation (opens via temp symlink)

# Serpl search and replace integration - Space+r,r
[keys.normal.space.r]
r = [
  ":write-all",
  ":sh git add -A && git commit -m 'pre-serpl snapshot' || true",
  ":insert-output nu -c 'serpl-anywhere >/dev/tty'",
  ":redraw",
  ":reload-all"
]

[keys.select]
# Same navigation in select mode
n = "extend_char_left"
e = "extend_line_down"
i = "extend_line_up"
o = "extend_char_right"

# Displaced commands in select mode
h = "open_below"
j = "search_next"
k = "extend_next_word_end"
l = "find_till_char"       # was on 't' (tilL)
L = "till_prev_char"       # was on 'T' (till backward)
t = "insert_mode"          # was on 'i' (inserT)
T = "insert_at_line_start"  # was on 'I' (Insert at line start)
